@Library('cr_shared_library@master')

import vars.Terraform.*

pipeline {
    agent {
        label 'Slave'
    }

    environment {
        Aws_Region = 'us-east-1'
        Docker_Registry = '315727832121.dkr.ecr.us-east-1.amazonaws.com'
        ECR_Repository = 'maven-cruntov'
        Docker_Creds = 'CR_AWS_ECR'
        Dockerfile_Path = 'Resources/Dockerfile'

    }

    stages {
        stage('Creating Docker Image'){
            steps{
                script{
                    docker.withRegistry("https://${Docker_Registry}", "ecr:${Aws_Region}:${Docker_Creds}"){
                        dockerImage = docker.build("${Docker_Registry}/${ECR_Repository}:${BUILD_NUMBER}", "-f ${Dockerfile_Path}" + " .")
                    }
                }
            }
        }

        stage('Push Image to ECR'){
            steps{
                script{
                    docker.withRegistry("https://${Docker_Registry}", "ecr:${Aws_Region}:${Docker_Creds}"){
                        dockerImage.push('${BUILD_NUMBER}')
                    }

                }
            }
        }
        stage('Docker Image removing'){
            steps{
                script{
                    sh('docker rmi ${Docker_Registry}/${ECR_Repository}:${BUILD_NUMBER} --force')
                }
            }
        }

        stage('Testing Shared'){
            steps{
                script{
                    terraform()
                }
            }
        }
//         when(
//             branch 'master'
//         ){
//             stage('Creating Cluster'){
//                 steps{
//
//                 }
//
//             }
//         }
    }
    post{
        always{
            Workspace_Cleaning()
        }
    }
}

def Workspace_Cleaning(){
        echo("""
            Cleaning Workspace now
        """)
        cleanWs()
        echo("""
             Workspace Cleaned
        """)
    }
