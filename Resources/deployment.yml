## Creating Namespace
#---
#apiVersion: v1
#kind: Namespace
#metadata:
#  name: deployment

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic-mvn
  labels:
    app: petclinic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: petclinic
  template:
    metadata:
      labels:
        app: petclinic
    spec:
      containers:
        - image: "$Docker_Registry/$ECR_Repository:$GIT_COMMIT"
          name: petclinic
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8080
      imagePullSecrets:
        - name: "$Kuber_Secret"



# Creating ClusterIP Services

---
apiVersion: v1
kind: Service
metadata:
  name: petclinic-nodeport
spec:
  type: NodePort
  ports:
    - nodePort: 30718
      protocol: TCP
      port: 80812
      targetPort: 8080
  externalIPs:
    - ""
  selector:
    app: petclinic

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: petclinic-netw-policy
spec:
  podSelector:
    matchLabels:
      app: petclinic
  ingress:
    - ports:
        - port: 30718
          protocol: TCP
  policyTypes:
  - Ingress

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: petclinic-ingress
spec:
#  backend:
#    resource:
#      kind: NodePort
#      name: petclinic-nodeport
#    serviceName: petclinic-nodeport
#    servicePort: 30718
  rules:
    - http:
        paths:
          - backend:
              servicePort: 30718
              serviceName: petclinic-nodeport
              resource:
                kind: NodePort
                name: petclinic-nodeport